services:
  favoritespostgres:
    image: 'postgres:11.5'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lists
    ports:
      - '5432:5432'
  zookeeper:
    image: 'wurstmeister/zookeeper:3.4.6'
    ports:
      - '2181:2181'
  kafka:
    image: 'wurstmeister/kafka:2.12-2.3.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISE_HOST_PORT=9092
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_CREATE_TOPICS=lists-msg-bus:1:1,lists-dlq:1:1'
pipeline:
  restore_cache:
    image: 'docker.target.com/drone/drone-s3-cache:2'
    pull: true
    restore: true
    secrets:
      - cache_s3_server
      - cache_s3_access_key
      - cache_s3_secret_key
      - cache_s3_ca_cert

#  publish-config-favorites-dev:
#    when:
#      event: [push]
#      branch: master
#    image: 'docker.target.com/app/lists/alpine-bash-curl-ssl:1.0.5'
#    secrets:
#      - TAP_API_TOKEN
#      - favorites_app_private_key_dev
#      - favorites_consumer_app_private_key_dev
#    commands:
#      - 'tap_api_token=$TAP_API_TOKEN app_private_key=$FAVORITES_APP_PRIVATE_KEY_DEV ./favorites-app/scripts/config_deploy_manager.sh conf.dev.0.0'
#      - 'tap_api_token=$TAP_API_TOKEN app_private_key=$FAVORITES_CONSUMER_APP_PRIVATE_KEY_DEV ./favorites-consumer-app/scripts/config_deploy_manager.sh conf.dev.0.0'
#
  build:
    when:
      event: [pull_request, push, tag]
    image: 'docker.target.com/tap/alpine-openjdk11-build:latest'
    environment:
      JAVA_TOOL_OPTIONS: '-Xmx4000M'
      GRADLE_USER_HOME: .gradle
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=1 -Dorg.gradle.parallel=false'
      JDBC_URL: 'jdbc:postgresql://favoritespostgres:5432/lists'
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
    commands:
      - './gradlew build distTar'

  rebuild_cache:
    image: 'docker.target.com/drone/drone-s3-cache:2'
    rebuild: true
    secrets:
      - cache_s3_server
      - cache_s3_access_key
      - cache_s3_secret_key
      - cache_s3_ca_cert
    mount:
      - .gradle

  flush_cache:
    image: 'docker.target.com/drone/drone-s3-cache:2'
    secrets:
      - cache_s3_server
      - cache_s3_access_key
      - cache_s3_secret_key
      - cache_s3_ca_cert
    flush: true
    flush_age: 14

  publish-docker-favorites-app-dev:
    image: plugins/docker
    group: devimggroup
    registry: docker.target.com
    repo: docker.target.com/app/shopping-list/favorites-app
    dockerfile: ./favorites-app/Dockerfile
    tags:
      - 'b${DRONE_BUILD_NUMBER}-${DRONE_COMMIT:0:8}'
      - latest
    when:
      event: [push]
      branch: master
    secrets:
      - {source: artifactory_username, target: plugin_username}
      - {source: artifactory_password, target: plugin_password}

  publish-docker-favorites-consumer-app-dev:
    image: plugins/docker
    group: devimggroup
    registry: docker.target.com
    repo: docker.target.com/app/shopping-list/favorites-consumer-app
    dockerfile: ./favorites-consumer-app/Dockerfile
    tags:
      - 'b${DRONE_BUILD_NUMBER}-${DRONE_COMMIT:0:8}'
      - latest
    when:
      event: [push]
      branch: master
    secrets:
      - {source: artifactory_username, target: plugin_username}
      - {source: artifactory_password, target: plugin_password}

secrets:
  cache_s3_server:
    path: secret/shared/drone/prod-secrets/cache_s3_server
  cache_s3_access_key:
    path: secret/shared/drone/prod-secrets/cache_s3_access_key
  cache_s3_secret_key:
    path: secret/shared/drone/prod-secrets/cache_s3_secret_key
  cache_s3_ca_cert:
    path: secret/shared/drone/prod-secrets/cache_s3_ca_cert
  favorites_app_private_key_dev:
    path: secret/repo/Lists-Modernization/favorites/favorites-privkey-dev
  favorites_consumer_app_private_key_dev:
    path: secret/repo/Lists-Modernization/favorites/favoritesconsumer-privkey-dev
