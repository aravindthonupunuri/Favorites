micronaut:
  application:
    name: shopping-list-app
  server:
    host: ${shopping-list-app-host:localhost}
    port: 8081
    idle-timeout: 2000ms
  http:
    client.connect-ttl: 30m
    client.pool.acquire-timeout: 2000ms
    services:
      carts-api:
        urls:
          - "https://stgapi-internal.target.com"
        connect-timeout: 300ms
        read-timeout: 1000ms
        pool:
          enabled: true
          max-connections: 128
          max-pending-acquires: 50
      sic-api:
        urls:
          - "https://stage.tgtneptune.com"
        connect-timeout: 300ms
        read-timeout: 400ms
        pool:
          enabled: true
          max-connections: 128
          max-pending-acquires: 50
      cartwheel-api:
        urls:
          - "https://cartwheel.perf.target.com"
        connect-timeout: 300ms
        read-timeout: 400ms
        pool:
          enabled: true
          max-connections: 256
          max-pending-acquires: 100
      neptune-api:
        urls:
          - "https://stgapi-internal.target.com"
        connect-timeout: 300ms
        read-timeout: 600ms
        pool:
          enabled: true
          max-connections: 128
          max-pending-acquires: 50
      item-search-api:
        urls:
          - "http://keywordsearch.us-east1.tgt-pe-test.gcp.cloud.target.internal"
        connect-timeout: 300ms
        read-timeout: 400ms
        pool:
          enabled: true
          max-connections: 128
          max-pending-acquires: 50
      lists-v2-api:
        urls:
          - "https://stage-api.target.com"
        connect-timeout: 300ms
        read-timeout: 1000ms
        pool:
          enabled: true
          max-connections: 128
          max-pending-acquires: 50

  metrics:
    binders:
      web:
        enabled: false # we are using our own binder via our custom micronaut-metrics lib

lists:
  metrics:
    binders:
      http:
        enabled: true # we are using our own binder via our custom micronaut-metrics lib

datasources: # hikari
  default:
    poolName: shoppinglistapp     # default autogenerated
    maximumPoolSize: 10       # default 10
    minimumIdle: 5           #default same as maximumPoolSize, valid if minimumIdle < maximumPoolSize
    idleTimeout: 600000       # default 600000ms (10min)
    maxLifetime: 1800000      # default 1800000ms (30min), should be shorter than any database imposed connection time limit
    connectionTimeout: 10000  # default: 30000ms (30 seconds)

jdbc-stmt-timeout:
  serverStatementTimeoutMillis: 200  # for server side statement timeout
  statementQueryTimeoutSeconds: 1    # for client side statement timeout

jackson:
  property-naming-strategy: "SNAKE_CASE"

filter:
  server:
    order:
      mdc-filter: 50
      lists-brave-tracing-server-filter: 100
      authorization-filter: 200
      sanitizing-filter: 300
  client:
    order:
      lists-brave-tracing-client-filter: 900
      resilience-client-filter: 800
      oauth-filter: 701
      oauth-key-filter: 700

logging:
  mdc:
    enabled: true
    keys:
      - profile_id
      - x-api-id
    filter:
      path: /lists/**

resilience4j:
  circuitbreaker:
    failure-rate-threshold: 50            # failure rate threshold in percentage (default: 50)
    wait-duration-secs-in-open-state: 10  # time cb waits before transitioning from open to half-open (default: 60s)
    sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED (default: COUNT_BASED)
    sliding-window-size: 100               # seconds for TIME_BASED, request-count for COUNT_BASED (default: 100)
    minimum-number-of-calls: 10            # min calls required (per sliding window period) before cb calculates error rate (default: 10)

tracing:
  zipkin:
    enabled: false
    excluded-paths: /health
    b3-propagation-suppress: true
    sample-rate-percent: 0.5
    http:
      url: "https://zipkinserver.dev.target.com"
      messageMaxBytes: 50000
    app:
      name: shoppinglist
      env: stage
      region: tdc

cart:
  client:
    refresh-cycle-sec: 999999999

list:
  list-type: SHOPPING
  max-count: 50
  max-pending-item-count: 100
  max-completed-items-count: 100
  abandon-after-duration-in-days: 730 # It is two years duration

sic:
  batch-size: 50

msgbus:
  source: shopping-list
  kafka:
    consumer:
      enabled: false
    producer:
      enabled: true
    dlqconsumer:
      enabled: false
    dlqproducer:
      enabled: true
    topic: lists-msg-bus
    consumer-group: lists-msg-bus-consumer
    consumer-batch-size: 10
    dlq-topic: lists-dlq
    dlq-consumer-group: lists-dlq-consumer
    dlq-event-retry-interval-secs: 1
    dlq-max-event-retry-count: 2
    dlq-consumer-batch-size: 10

